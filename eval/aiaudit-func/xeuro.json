{
    "results": [
        {
            "rule": "transfer(address,uint256):function transfer(address _to, uint256 _value) public returns (bool success) throw if the message caller's account balance does not have enough tokens to spend",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):function transfer(address _to, uint256 _value) public returns (bool success)not throw if Transfers of 0 values",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):function transfer(address _to, uint256 _value) public returns (bool success)emit '['Transfer']' if transfer is called",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) throw if the _from account has not deliberately authorized the sender of the message via some mechanism",
            "violated": true
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)not throw if Transfers of 0 values",
            "violated": true
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)emit '['Transfer']' if Transfers _value amount of tokens from address _from to address _to",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)emit '['Transfer']' if Transfers of 0 values",
            "violated": false
        },
        {
            "rule": "constructor():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferAndCall(address,uint256,bytes):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferAllAndCall(address,bytes):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addAdmin(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeAdmin(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "changeMinExchangeAmount(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanMint(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanMint(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanTransferFromContract(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanTransferFromContract(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanBurn(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanBurn(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mintTokens(uint256,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mintAndTransfer(uint256,uint256,address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "burnTokens(uint256,uint256,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "constructor():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferAndCall(address,uint256,bytes):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferAllAndCall(address,bytes):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addAdmin(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeAdmin(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "changeMinExchangeAmount(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanMint(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanMint(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanTransferFromContract(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanTransferFromContract(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanBurn(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanBurn(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mintTokens(uint256,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mintAndTransfer(uint256,uint256,address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "burnTokens(uint256,uint256,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "constructor():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferAndCall(address,uint256,bytes):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferAllAndCall(address,bytes):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addAdmin(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeAdmin(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "changeMinExchangeAmount(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanMint(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanMint(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanTransferFromContract(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanTransferFromContract(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "addToCanBurn(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "removeFromCanBurn(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mintTokens(uint256,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "mintAndTransfer(uint256,uint256,address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burnTokens(uint256,uint256,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "constructor():event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "transferAndCall(address,uint256,bytes):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "transferAllAndCall(address,bytes):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "addAdmin(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "removeAdmin(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "changeMinExchangeAmount(uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "addToCanMint(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "removeFromCanMint(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "addToCanTransferFromContract(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "removeFromCanTransferFromContract(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "addToCanBurn(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "removeFromCanBurn(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "mintTokens(uint256,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "mintAndTransfer(uint256,uint256,address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "burnTokens(uint256,uint256,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        }
    ]
}