{
    "results": [
        {
            "rule": "transfer(address,uint256):function transfer(address _to, uint256 _value) public returns (bool success) throw if the message caller's account balance does not have enough tokens to spend",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):function transfer(address _to, uint256 _value) public returns (bool success)not throw if Transfers of 0 values",
            "violated": true
        },
        {
            "rule": "transfer(address,uint256):function transfer(address _to, uint256 _value) public returns (bool success)emit '['Transfer']' if transfer is called",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) throw if the _from account has not deliberately authorized the sender of the message via some mechanism",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)not throw if Transfers of 0 values",
            "violated": true
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)emit '['Transfer']' if Transfers _value amount of tokens from address _from to address _to",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)emit '['Transfer']' if Transfers of 0 values",
            "violated": false
        },
        {
            "rule": "approve(address,uint256):function approve(address _spender, uint256 _value) public returns (bool success)allowance is reset to _value",
            "violated": false
        },
        {
            "rule": "approve(address,uint256):function approve(address _spender, uint256 _value) public returns (bool success)emit '['Approval']' if function successfully executes",
            "violated": false
        },
        {
            "rule": "stop():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "start():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setOwner(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setAuthority(DSAuthority):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "totalSupply():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "balanceOf(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "allowance(address,address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "approve(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "constructor(bytes32):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "approve(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "push(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "pull(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "move(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mint(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burn(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "mint(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burn(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "setName(bytes32):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "stop():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "start():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setOwner(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setAuthority(DSAuthority):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "totalSupply():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "balanceOf(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "allowance(address,address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "approve(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "constructor(bytes32):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "approve(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "push(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "pull(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "move(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mint(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burn(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "mint(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burn(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "setName(bytes32):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "stop():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "start():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setOwner(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setAuthority(DSAuthority):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "totalSupply():event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "balanceOf(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "allowance(address,address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "transferFrom(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "approve(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "constructor(bytes32):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "approve(address):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "push(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "pull(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "move(address,address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mint(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burn(uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "mint(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": true
        },
        {
            "rule": "burn(address,uint256):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "setName(bytes32):event Transfer(address indexed _from, address indexed _to, uint256 _value)emit 'Transfer'",
            "violated": false
        },
        {
            "rule": "stop():event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "start():event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "setOwner(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "setAuthority(DSAuthority):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "totalSupply():event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "balanceOf(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "allowance(address,address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "transfer(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": true
        },
        {
            "rule": "transferFrom(address,address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": true
        },
        {
            "rule": "approve(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "constructor(bytes32):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "approve(address):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "push(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": true
        },
        {
            "rule": "pull(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "move(address,address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "mint(uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": true
        },
        {
            "rule": "burn(uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "mint(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "burn(address,uint256):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        },
        {
            "rule": "setName(bytes32):event Approval(address indexed _owner, address indexed _spender, uint256 _value)emit 'Approval'",
            "violated": false
        }
    ]
}