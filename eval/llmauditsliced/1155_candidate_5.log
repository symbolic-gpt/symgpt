2025-08-17 16:24:51 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external] checking rule=' throw if `_to` is the zero address' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 1}, 'right': {'type': 'ConstantSelector', 'value': '0x0000000000000000000000000000000000000000'}, 'op': 'eq'}, 'op': 'throw'}'
2025-08-17 16:24:51 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeTransferFrom
2025-08-17 16:24:54 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external] checking rule=' throw if balance of holder for token `_id` is lower than the `_value` sent' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 2}, {'type': 'FuncParamSelector', 'index': 0}]}, 'right': {'type': 'FuncParamSelector', 'index': 3}, 'op': 'lt'}, 'op': 'throw'}'
2025-08-17 16:24:54 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeTransferFrom
2025-08-17 16:25:03 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external] checking rule='emit '['TransferSingle']' if the balance change is reflected after the transfer' sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 2}, {'type': 'FuncParamSelector', 'index': 1}]}}, 'type': 'EmitVerify'}'
2025-08-17 16:25:03 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeTransferFrom
2025-08-17 16:25:10 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external] checking rule='call onERC1155Received if _to is a smart contract (e.g. code size > 0)' sym='{'callee': 'onERC1155Received', 'on': {'index': 1, 'type': 'FuncParamSelector'}, 'cond': 'is_contract', 'type': 'CallVerify'}'
2025-08-17 16:25:10 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeTransferFrom
2025-08-17 16:25:23 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external] checking rule=' throw if `_to` is the zero address' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 1}, 'right': {'type': 'ConstantSelector', 'value': '0x0000000000000000000000000000000000000000'}, 'op': 'eq'}, 'op': 'throw'}'
2025-08-17 16:25:23 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:25:27 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external] checking rule=' throw if length of `_ids` is not the same as length of `_values`' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'ArrLengthSelector', 'value': {'type': 'FuncParamSelector', 'index': 2}}, 'right': {'type': 'ArrLengthSelector', 'value': {'type': 'FuncParamSelector', 'index': 3}}, 'op': 'not_eq'}, 'op': 'throw'}'
2025-08-17 16:25:27 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:25:32 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external] checking rule=' throw if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient' sym='{'type': 'ThrowVerify', 'cond': {'type': 'LogicCondition', 'op': 'and', 'cond': [{'type': 'CompCondition', 'left': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 2}, {'type': 'FuncParamSelector', 'index': 0}]}, 'right': {'type': 'FuncParamSelector', 'index': 3}, 'op': 'lt'}]}, 'op': 'throw'}'
2025-08-17 16:25:32 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:25:40 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external] checking rule='emit '['TransferSingle', 'TransferBatch']' if all the balance changes are reflected and the transfer conditions are met' sym='{'event': 'TransferBatch', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 2}, {'type': 'FuncParamSelector', 'index': 1}]}}, 'alternative_events': ['TransferSingle'], 'type': 'EmitVerify'}'
2025-08-17 16:25:40 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:25:49 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external] checking rule='call onERC1155BatchReceived if `_to` is a smart contract (e.g. code size > 0)' sym='{'callee': 'onERC1155BatchReceived', 'on': {'index': 1, 'type': 'FuncParamSelector'}, 'cond': 'is_contract', 'type': 'CallVerify'}'
2025-08-17 16:25:49 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:26:08 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function setApprovalForAll(address _operator, bool _approved) external] checking rule='emit '['ApprovalForAll']' if on success' sym='{'event': 'ApprovalForAll', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'setApprovalForAll', 'keys': [{'type': 'MsgSenderSelector'}, {'type': 'FuncParamSelector', 'index': 0}]}}, 'type': 'EmitVerify'}'
2025-08-17 16:26:08 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=setApprovalForAll
2025-08-17 16:26:08 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _values, bytes calldata _data) external] checking rule='not throw if caller must be approved to manage the tokens being transferred out of the `_from` account' sym='{'type': 'ThrowVerify', 'cond': {'type': 'LogicCondition', 'cond': [{'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 0}, 'right': {'type': 'MsgSenderSelector'}, 'op': 'eq'}, {'type': 'CompCondition', 'left': {'type': 'FnCallRetSelector', 'fn_name': 'isApprovedForAll'}, 'right': {'type': 'ConstantSelector', 'value': True}, 'op': 'eq'}], 'op': 'or'}, 'op': 'not_throw'}'
2025-08-17 16:26:08 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);] checking rule='emit 'TransferSingle'' sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 3}, {'type': 'FuncParamSelector', 'index': 1}]}}, 'arg_verifiers': [{'arg_index': 0, 'expected_value': {'type': 'MsgSenderSelector'}}, {'arg_index': 1, 'expected_value': {'type': 'FuncParamSelector', 'index': 1}}, {'arg_index': 2, 'expected_value': {'type': 'FuncParamSelector', 'index': 2}}, {'arg_index': 3, 'expected_value': {'type': 'FuncParamSelector', 'index': 3}}, {'arg_index': 4, 'expected_value': {'type': 'FuncParamSelector', 'index': 4}}], 'alternative_events': ['TransferBatch'], 'type': 'EmitVerify'}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 3}, {'type': 'FuncParamSelector', 'index': 1}]}}, 'arg_verifiers': [{'arg_index': 0, 'expected_value': {'type': 'MsgSenderSelector'}}, {'arg_index': 1, 'expected_value': {'type': 'FuncParamSelector', 'index': 1}}, {'arg_index': 2, 'expected_value': {'type': 'FuncParamSelector', 'index': 2}}, {'arg_index': 3, 'expected_value': {'type': 'FuncParamSelector', 'index': 3}}, {'arg_index': 4, 'expected_value': {'type': 'FuncParamSelector', 'index': 4}}], 'alternative_events': ['TransferBatch'], 'type': 'EmitVerify'}': 'value'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);] checking rule='emit 'TransferSingle'' sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'ConstantSelector', 'value': '0x0'}]}, 'change_type': 'token_creation'}, 'arg_verifiers': [{'arg_index': 1, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'ConstantSelector', 'value': '0x0'}]}, 'change_type': 'token_creation'}, 'arg_verifiers': [{'arg_index': 1, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}': 'value'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);] checking rule='emit 'TransferSingle'' sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'ConstantSelector', 'value': '0x0'}]}, 'change_type': 'token_burn'}, 'arg_verifiers': [{'arg_index': 2, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'ConstantSelector', 'value': '0x0'}]}, 'change_type': 'token_burn'}, 'arg_verifiers': [{'arg_index': 2, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}': 'value'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);] checking rule='emit 'TransferBatch'' sym='{'event': 'TransferBatch', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 3}, {'type': 'FuncParamSelector', 'index': 2}]}}, 'arg_verifiers': [{'arg_index': 0, 'expected_value': {'value': {'type': 'MsgSenderSelector'}}}, {'arg_index': 1, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 1}}}, {'arg_index': 2, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 2}}}, {'arg_index': 3, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 3}}}, {'arg_index': 4, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 4}}}], 'alternative_events': ['TransferSingle'], 'type': 'EmitVerify'}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'TransferBatch', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 3}, {'type': 'FuncParamSelector', 'index': 2}]}}, 'arg_verifiers': [{'arg_index': 0, 'expected_value': {'value': {'type': 'MsgSenderSelector'}}}, {'arg_index': 1, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 1}}}, {'arg_index': 2, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 2}}}, {'arg_index': 3, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 3}}}, {'arg_index': 4, 'expected_value': {'value': {'type': 'FuncParamSelector', 'index': 4}}}], 'alternative_events': ['TransferSingle'], 'type': 'EmitVerify'}': 'value'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);] checking rule='emit 'TransferBatch'' sym='{'type': 'EmitVerify', 'event': 'TransferBatch', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'ConstantSelector', 'value': '0x0'}]}, 'change_type': 'token_creation'}, 'arg_verifiers': [{'type': 'ArgVerify', 'arg_index': 1, 'expected_value': {'type': 'ConstantSelector', 'value': '0x0'}}]}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'type': 'EmitVerify', 'event': 'TransferBatch', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'ConstantSelector', 'value': '0x0'}]}, 'change_type': 'token_creation'}, 'arg_verifiers': [{'type': 'ArgVerify', 'arg_index': 1, 'expected_value': {'type': 'ConstantSelector', 'value': '0x0'}}]}': 'value'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);] checking rule='emit 'TransferBatch'' sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'EventParamSelector', 'index': 3}, {'type': 'EventParamSelector', 'index': 1}]}, 'change_type': 'token_burn'}, 'arg_verifiers': [{'arg_index': 2, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'TransferSingle', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'EventParamSelector', 'index': 3}, {'type': 'EventParamSelector', 'index': 1}]}, 'change_type': 'token_burn'}, 'arg_verifiers': [{'arg_index': 2, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}': 'value'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);] checking rule='emit 'ApprovalForAll'' sym='{'event': 'ApprovalForAll', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'isApprovedForAll', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'FuncParamSelector', 'index': 1}]}}, 'type': 'EmitVerify'}'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=addGameRole
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=removeGameRole
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=renounceOwnership
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=transferOwnership
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=setApprovalForAll
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'ApprovalForAll'' for function='setApprovalForAll(address,bool) returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeTransferFrom
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=safeBatchTransferFrom
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=constructor
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=setURI
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=gameMint
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=gameBurn
2025-08-17 16:26:14 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=gameTransferFrom
2025-08-17 16:26:15 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=SunflowerLandInventory function=gameSetApproval
2025-08-17 16:26:15 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'ApprovalForAll'' for function='gameSetApproval(address,address,bool) returns(bool)': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 16:26:15 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event URI(string _value, uint256 indexed _id);] checking rule='emit 'URI'' sym='{'event': 'URI', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 1}, {'type': 'ConstantSelector', 'value': 'address(this)'}]}}, 'type': 'EmitVerify', 'arg_verifiers': [{'type': 'ArgVerify', 'arg_index': 0, 'expected_value': {'type': 'ArgVerifyExpectValue', 'value': {'type': 'FuncParamSelector', 'index': 0}, 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 0}, 'right': {'type': 'ConstantSelector', 'value': 'URL to JSON conforming to ERC-1155 Metadata URI JSON Schema'}, 'op': 'eq'}}}, {'type': 'ArgVerify', 'arg_index': 1, 'expected_value': {'type': 'ArgVerifyExpectValue', 'value': {'type': 'FuncParamSelector', 'index': 1}}}]}'
2025-08-17 16:26:15 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'URI', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 1}, {'type': 'ConstantSelector', 'value': 'address(this)'}]}}, 'type': 'EmitVerify', 'arg_verifiers': [{'type': 'ArgVerify', 'arg_index': 0, 'expected_value': {'type': 'ArgVerifyExpectValue', 'value': {'type': 'FuncParamSelector', 'index': 0}, 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 0}, 'right': {'type': 'ConstantSelector', 'value': 'URL to JSON conforming to ERC-1155 Metadata URI JSON Schema'}, 'op': 'eq'}}}, {'type': 'ArgVerify', 'arg_index': 1, 'expected_value': {'type': 'ArgVerifyExpectValue', 'value': {'type': 'FuncParamSelector', 'index': 1}}}]}': 'value'
2025-08-17 16:26:15 - /home/szx5097/code/solgpt/py/audit/process.py:108 - INFO - [+] eval/llmauditsliced/1155_candidate_5.json
2025-08-17 19:14:38 - /home/szx5097/code/solgpt/py/audit/process.py:47 - INFO - Skipping benchmark/smallext/1155_candidate_5.sol, already processed.
