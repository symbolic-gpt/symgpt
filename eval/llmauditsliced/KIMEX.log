2025-08-17 19:40:58 - /home/szx5097/code/solgpt/py/audit/process.py:186 - INFO - check if name() returns(string) is in ['owner() returns(address)', 'totalReservedTokenAllocation() returns(uint256)', 'minInvestedCap() returns(uint256)', 'minInvestedAmount() returns(uint256)', 'decimals() returns(uint256)', 'isSelling() returns(bool)', 'icoStartTime() returns(uint256)', 'totalRemainingTokensForSales() returns(uint256)', 'totalLoadedRefund() returns(uint256)', 'icoStandardPrice() returns(uint256)', 'totalRefundedAmount() returns(uint256)', 'teamAddress() returns(address)', 'founderAddress() returns(address)', 'founderAllocation() returns(uint256)', 'icoEndTime() returns(uint256)', 'whiteList(address) returns(bool)', 'walletAddress() returns(address)', 'inActive() returns(bool)', 'totalSupply() returns(uint256)', 'founderAllocatedTime() returns(uint256)', 'totalInvestedAmountOf(address) returns(uint256)', 'name() returns(string)', 'adminAddress() returns(address)', 'teamAllocatedTime() returns(uint256)', 'teamAllocation() returns(uint256)', 'symbol() returns(string)', 'salesAllocation() returns(uint256)', 'isTransferable() returns(bool)', 'reservedAllocation() returns(uint256)']: True
2025-08-17 19:40:58 - /home/szx5097/code/solgpt/py/audit/process.py:186 - INFO - check if symbol() returns(string) is in ['owner() returns(address)', 'totalReservedTokenAllocation() returns(uint256)', 'minInvestedCap() returns(uint256)', 'minInvestedAmount() returns(uint256)', 'decimals() returns(uint256)', 'isSelling() returns(bool)', 'icoStartTime() returns(uint256)', 'totalRemainingTokensForSales() returns(uint256)', 'totalLoadedRefund() returns(uint256)', 'icoStandardPrice() returns(uint256)', 'totalRefundedAmount() returns(uint256)', 'teamAddress() returns(address)', 'founderAddress() returns(address)', 'founderAllocation() returns(uint256)', 'icoEndTime() returns(uint256)', 'whiteList(address) returns(bool)', 'walletAddress() returns(address)', 'inActive() returns(bool)', 'totalSupply() returns(uint256)', 'founderAllocatedTime() returns(uint256)', 'totalInvestedAmountOf(address) returns(uint256)', 'name() returns(string)', 'adminAddress() returns(address)', 'teamAllocatedTime() returns(uint256)', 'teamAllocation() returns(uint256)', 'symbol() returns(string)', 'salesAllocation() returns(uint256)', 'isTransferable() returns(bool)', 'reservedAllocation() returns(uint256)']: True
2025-08-17 19:40:58 - /home/szx5097/code/solgpt/py/audit/process.py:186 - INFO - check if decimals() returns(uint8) is in ['owner() returns(address)', 'totalReservedTokenAllocation() returns(uint256)', 'minInvestedCap() returns(uint256)', 'minInvestedAmount() returns(uint256)', 'decimals() returns(uint256)', 'isSelling() returns(bool)', 'icoStartTime() returns(uint256)', 'totalRemainingTokensForSales() returns(uint256)', 'totalLoadedRefund() returns(uint256)', 'icoStandardPrice() returns(uint256)', 'totalRefundedAmount() returns(uint256)', 'teamAddress() returns(address)', 'founderAddress() returns(address)', 'founderAllocation() returns(uint256)', 'icoEndTime() returns(uint256)', 'whiteList(address) returns(bool)', 'walletAddress() returns(address)', 'inActive() returns(bool)', 'totalSupply() returns(uint256)', 'founderAllocatedTime() returns(uint256)', 'totalInvestedAmountOf(address) returns(uint256)', 'name() returns(string)', 'adminAddress() returns(address)', 'teamAllocatedTime() returns(uint256)', 'teamAllocation() returns(uint256)', 'symbol() returns(string)', 'salesAllocation() returns(uint256)', 'isTransferable() returns(bool)', 'reservedAllocation() returns(uint256)']: False
2025-08-17 19:40:58 - /home/szx5097/code/solgpt/py/audit/process.py:186 - INFO - check if totalSupply() returns(uint256) is in ['owner() returns(address)', 'totalReservedTokenAllocation() returns(uint256)', 'minInvestedCap() returns(uint256)', 'minInvestedAmount() returns(uint256)', 'decimals() returns(uint256)', 'isSelling() returns(bool)', 'icoStartTime() returns(uint256)', 'totalRemainingTokensForSales() returns(uint256)', 'totalLoadedRefund() returns(uint256)', 'icoStandardPrice() returns(uint256)', 'totalRefundedAmount() returns(uint256)', 'teamAddress() returns(address)', 'founderAddress() returns(address)', 'founderAllocation() returns(uint256)', 'icoEndTime() returns(uint256)', 'whiteList(address) returns(bool)', 'walletAddress() returns(address)', 'inActive() returns(bool)', 'totalSupply() returns(uint256)', 'founderAllocatedTime() returns(uint256)', 'totalInvestedAmountOf(address) returns(uint256)', 'name() returns(string)', 'adminAddress() returns(address)', 'teamAllocatedTime() returns(uint256)', 'teamAllocation() returns(uint256)', 'symbol() returns(string)', 'salesAllocation() returns(uint256)', 'isTransferable() returns(bool)', 'reservedAllocation() returns(uint256)']: True
2025-08-17 19:40:58 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transfer(address _to, uint256 _value) public returns (bool success)] checking rule=' throw if the message caller's account balance does not have enough tokens to spend' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'MsgSenderSelector'}]}, 'right': {'type': 'FuncParamSelector', 'index': 1}, 'op': 'lt'}, 'op': 'throw'}'
2025-08-17 19:40:58 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transfer
2025-08-17 19:41:05 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transfer(address _to, uint256 _value) public returns (bool success)] checking rule='not throw if Transfers of 0 values' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 1}, 'right': {'type': 'ConstantSelector', 'value': 0}, 'op': 'eq'}, 'op': 'not_throw'}'
2025-08-17 19:41:05 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transfer
2025-08-17 19:41:16 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transfer(address _to, uint256 _value) public returns (bool success)] checking rule='emit '['Transfer']' if transfer is called' sym='{'type': 'EmitVerify', 'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'transfer', 'keys': [{'type': 'FuncParamSelector', 'index': 0}]}}, 'within_call_fn': 'transfer'}'
2025-08-17 19:41:16 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transfer
2025-08-17 19:41:16 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)] checking rule=' throw if the _from account has not deliberately authorized the sender of the message via some mechanism' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'StateVarSelector', 'anchor_fn': 'allowance', 'keys': [{'type': 'FuncParamSelector', 'index': 0}, {'type': 'MsgSenderSelector'}]}, 'right': {'type': 'FuncParamSelector', 'index': 2}, 'op': 'lt'}, 'op': 'throw'}'
2025-08-17 19:41:16 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:41:22 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)] checking rule='not throw if Transfers of 0 values' sym='{'type': 'ThrowVerify', 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 2}, 'right': {'type': 'ConstantSelector', 'value': 0}, 'op': 'eq'}, 'op': 'not_throw'}'
2025-08-17 19:41:22 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:41:32 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)] checking rule='emit '['Transfer']' if Transfers _value amount of tokens from address _from to address _to' sym='{'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf', 'keys': [{'type': 'FuncParamSelector', 'index': 1}]}, 'change_type': 'increase'}, 'type': 'EmitVerify'}'
2025-08-17 19:41:32 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:41:41 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)] checking rule='emit '['Transfer']' if Transfers of 0 values' sym='{'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'anchor_fn': 'balanceOf', 'type': 'StateVarSelector', 'keys': [{'type': 'FuncParamSelector', 'index': 1}]}}, 'cond': {'type': 'CompCondition', 'left': {'type': 'FuncParamSelector', 'index': 2}, 'right': {'type': 'ConstantSelector', 'value': 0}, 'op': 'eq'}, 'type': 'EmitVerify'}'
2025-08-17 19:41:41 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:41:48 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function approve(address _spender, uint256 _value) public returns (bool success)] checking rule='allowance is reset to _value' sym='{'type': 'StateAssignVerify', 'state': {'type': 'StateVarSelector', 'anchor_fn': 'approve', 'keys': ['msg.sender', {'type': 'FuncParamSelector', 'index': 0}]}, 'value': {'type': 'FuncParamSelector', 'index': 1}, 'op': 'overwrite'}'
2025-08-17 19:41:48 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=approve
2025-08-17 19:41:53 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=function approve(address _spender, uint256 _value) public returns (bool success)] checking rule='emit '['Approval']' if function successfully executes' sym='{'event': 'Approval', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'allowance'}}, 'type': 'EmitVerify'}'
2025-08-17 19:41:53 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=approve
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event Transfer(address indexed _from, address indexed _to, uint256 _value)] checking rule='emit 'Transfer'' sym='{'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf'}}, 'type': 'EmitVerify'}'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeOwner
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=constructor
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=fallback
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='fallback() returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=loadFund
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transfer
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='transfer(address,uint256) returns(bool)': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='transferFrom(address,address,uint256) returns(bool)': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=approve
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=modifyWhiteList
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=startICO
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=endICO
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=setICOPrice
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=activate
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=deActivate
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=enableTokenTransfer
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeWallet
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeAdminAddress
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeFounderAddress
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeTeamAddress
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateTokensForFounder
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateTokensForFounder() returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateTokensForTeam
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateTokensForTeam() returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateReservedTokens
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateReservedTokens(address,uint256) returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateSalesTokens
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateSalesTokens(address,uint256) returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event Transfer(address indexed _from, address indexed _to, uint256 _value)] checking rule='emit 'Transfer'' sym='{'type': 'EmitVerify', 'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf'}}}'
2025-08-17 19:42:01 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeOwner
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=constructor
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=fallback
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='fallback() returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=loadFund
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transfer
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='transfer(address,uint256) returns(bool)': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='transferFrom(address,address,uint256) returns(bool)': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=approve
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=modifyWhiteList
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=startICO
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=endICO
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=setICOPrice
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=activate
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=deActivate
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=enableTokenTransfer
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeWallet
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeAdminAddress
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeFounderAddress
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeTeamAddress
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateTokensForFounder
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateTokensForFounder() returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateTokensForTeam
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateTokensForTeam() returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateReservedTokens
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateReservedTokens(address,uint256) returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateSalesTokens
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:347 - ERROR - [sym] failed to verify rule='emit 'Transfer'' for function='allocateSalesTokens(address,uint256) returns()': unsupported operand type(s) for +: 'NoneType' and 'str'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event Transfer(address indexed _from, address indexed _to, uint256 _value)] checking rule='emit 'Transfer'' sym='{'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf'}, 'change_type': 'token_creation'}, 'arg_verifiers': [{'arg_index': 0, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:273 - ERROR - [sym] failed to deserialize sym='{'event': 'Transfer', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'balanceOf'}, 'change_type': 'token_creation'}, 'arg_verifiers': [{'arg_index': 0, 'expected_value': {'value': {'type': 'ConstantSelector', 'value': '0x0'}}, 'type': 'ArgVerify'}], 'type': 'EmitVerify'}': 'value'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:269 - INFO - [sym][interface=event Approval(address indexed _owner, address indexed _spender, uint256 _value)] checking rule='emit 'Approval'' sym='{'event': 'Approval', 'sv_cond': {'type': 'WrittenCondition', 'value': {'type': 'StateVarSelector', 'anchor_fn': 'approve'}}, 'within_call_fn': 'approve', 'type': 'EmitVerify'}'
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeOwner
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=constructor
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=fallback
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=loadFund
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transfer
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=transferFrom
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=approve
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=modifyWhiteList
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=startICO
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=endICO
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=setICOPrice
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=activate
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=deActivate
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=enableTokenTransfer
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeWallet
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeAdminAddress
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeFounderAddress
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=changeTeamAddress
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateTokensForFounder
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateTokensForTeam
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateReservedTokens
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/sol/sym.py:831 - INFO - [sym] run contract=KIMEX function=allocateSalesTokens
2025-08-17 19:42:02 - /home/szx5097/code/solgpt/py/audit/process.py:108 - INFO - [+] eval/llmauditsliced/KIMEX.json
